# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Prepare tools
        run: |
          python -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false
      - name: Install requirements
        run: |
          poetry install
          poetry run pip install isort black ruff mypy bandit
      - name: Check code style and Type Hint
        run: |
          poetry run isort --check-only --src=fastapi_cdn_host .
          poetry run black --check --fast .
          poetry run ruff .
          poetry run mypy .
          poetry run bandit -r fastapi_cdn_host
      - name: test
        run: ./scripts/test.sh
      - name: build
        run: poetry build
